  monCard: { position:'relative', display:'flex', flexDirection:'column', alignItems:'center', gap:8, border:'1px solid var(--divider)', borderRadius:10, padding:'10px', background:'var(--surface)', textAlign:'center' },
  encWrap: {
    display:'flex',
    gap:8,
    marginTop:8,
    width:'100%',
    overflowX:'auto',
    scrollBehavior:'smooth'
  },
  encCol: { display:'flex', flexDirection:'column', alignItems:'center', gap:4 },
  chip: {
    padding:'4px 8px',
    borderRadius:6,
    background:'var(--primary)',
    color:'var(--onprimary)',
    fontSize:14,
    border:'1px solid var(--accent)',
    boxShadow:'0 0 0 2px var(--accent)',
    display:'inline-block'
  }
};

/* ---------- utils ---------- */
function titleCase(s = "") {
  return String(s)
    .toLowerCase()
    .replace(/(^|[\s(-])([a-z])/g, (_, p1, p2) => p1 + p2.toUpperCase());
}
function normalizeKey(s=''){
  return String(s)
    .toLowerCase()
    .normalize('NFKD')
    .replace(/?/g,'-f')
    .replace(/?/g,'-m')
    .replace(/[^\w\s-]/g,'')
    .replace(/\s+/g,'-')
    .replace(/-+/g,'-')
    .trim();
}
function normalizeType(t){ return String(t||'').toLowerCase().trim(); }
function normalizeRegion(r=''){ return String(r||'').toLowerCase().replace(/\s+/g,'').trim(); }
const keyName = (s = "") => s.trim().toLowerCase().replace(/\s+/g, " ");

function calcCatchChance(rate, hpRatio = 1, statusMult = 1) {
  if (!rate || rate <= 0) return 0;
  const a = Math.floor((3 - 2 * hpRatio) * rate / 3);
  const aStatus = Math.floor(a * statusMult);
  const capped = Math.max(1, Math.min(255, aStatus));
  if (capped >= 255) return 1;
  const b = 1048560 / Math.sqrt(Math.sqrt(16711680 / capped));
  return Math.pow(b / 65535, 4);
