// Centralized Pokédex loader + search utilities for gens 1–5.
// Compatible with legacy shapes: supports `dex` OR `id`, plus optional sprite-ish fields.

import pokemmoDex from "/pokemmo-data/monster.json?import";

function norm(s) {
  return (s ?? "")
    .toString()
    .normalize("NFKD")
    .replace(/[\u0300-\u036f]/g, "")
    .toLowerCase()
    .trim();
}

const POKEDEX = Array.isArray(pokemmoDex) ? pokemmoDex : [];
const byDex = new Map();
const bySlug = new Map();
const byName = new Map();
const byAbility = new Map();
const byForm = new Map();

for (const mon of POKEDEX) {
  const dexNum =
    typeof mon.dex === "number"
      ? mon.dex
      : typeof mon.id === "number"
      ? mon.id
      : null;

  const shaped = {
    dex: dexNum, // canonical id
    name: mon.name ?? "",
    slug: mon.slug ?? "",
    types: Array.isArray(mon.types) ? mon.types : [],
    abilities: Array.isArray(mon.abilities) ? mon.abilities : [],
    forms: Array.isArray(mon.forms) ? mon.forms : [],
    evolutions: Array.isArray(mon.evolutions) ? mon.evolutions : [],
    // --- sprite-ish pass-throughs (some datasets differ) ---
    sprite: mon.sprite ?? null,
    sprites: mon.sprites ?? null,       // e.g., PokeAPI { front_default: ... }
    image: mon.image ?? null,
    icon: mon.icon ?? null,
    // Optional scraper fields (future)
    locations: mon.locations ?? null,
    catchRate: mon.catchRate ?? null,
  };

  if (shaped.dex !== null) byDex.set(shaped.dex, shaped);
  if (shaped.slug) bySlug.set(norm(shaped.slug), shaped);
  if (shaped.name) byName.set(norm(shaped.name), shaped);
  for (const ab of shaped.abilities) {
    const k = norm(ab);
    if (!byAbility.has(k)) byAbility.set(k, []);
    byAbility.get(k).push(shaped);
  }
  for (const f of shaped.forms) {
    const k = norm(f);
    if (!byForm.has(k)) byForm.set(k, []);
    byForm.get(k).push(shaped);
  }
}

export function getAll() {
  return [...byDex.values()].sort((a, b) => a.dex - b.dex);
}
export function getByDex(num) {
  return byDex.get(Number(num)) ?? null;
}
export function getBySlug(slug) {
  return bySlug.get(norm(slug)) ?? null;
}
export function getByName(name) {
  return byName.get(norm(name)) ?? null;
}
export function getByAbility(ability) {
  return byAbility.get(norm(ability)) ?? [];
}
export function getByForm(form) {
  return byForm.get(norm(form)) ?? [];
}

/**
 * Search logic:
 * - numbers: prefix on dex (e.g., "25" matches #25 & #250…)
 * - text: substring on name or slug, plus name prefix
 * - optional type filter: exact (case-insensitive)
 */
export function search(query, opts = {}) {
  const q = norm(query);
  const typeFilter = opts.type ? norm(opts.type) : null;
  const abilityFilter = opts.ability ? norm(opts.ability) : null;
  const formFilter = opts.form ? norm(opts.form) : null;

  let haystack = getAll();

  if (q) {
    const qNum = Number(q);
    const qIsNumber = !Number.isNaN(qNum) && /^\d+$/.test(q);

    if (qIsNumber) {
      haystack = haystack.filter((m) =>
        String(m.dex).startsWith(String(qNum))
      );
    } else {
      haystack = haystack.filter((m) => {
        const n = norm(m.name);
        const s = norm(m.slug);
        const a = (m.abilities || []).some((ab) => norm(ab).includes(q));
        const f = (m.forms || []).some((fo) => norm(fo).includes(q));
        return n.startsWith(q) || n.includes(q) || s.includes(q) || a || f;
      });
    }
  }

  if (typeFilter) {
    haystack = haystack.filter((m) =>
      (m.types || []).some((t) => norm(t) === typeFilter)
    );
  }
  if (abilityFilter) {
    haystack = haystack.filter((m) =>
      (m.abilities || []).some((a) => norm(a) === abilityFilter)
    );
  }
  if (formFilter) {
    haystack = haystack.filter((m) =>
      (m.forms || []).some((f) => norm(f) === formFilter)
    );
  }

  return haystack;
}

export function isPokedexLoaded() {
  return POKEDEX.length > 0 && byDex.size > 0;
}

//# sourceMappingURL=data:application/json;base64,