name: Build & Release

on:
  push:
    tags: ["v*"]
  workflow_dispatch: {}

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        shell: pwsh
        run: npm ci

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "6.0.x"

      - name: Publish LiveRouteOCR
        shell: pwsh
        run: dotnet publish .\LiveRouteOCR\LiveRouteOCR.csproj -c Release -r win-x64 -p:PublishSingleFile=false -p:SelfContained=true -o LiveRouteOCR/publish

      - name: Zip LiveRouteOCR for packaging
        shell: pwsh
        run: Compress-Archive -Path LiveRouteOCR/publish/* -DestinationPath LiveRouteOCR/LiveRouteOCR.zip -Force

      - name: Ensure OCR zip exists
        shell: pwsh
        run: |
          if (-not (Test-Path "LiveRouteOCR/LiveRouteOCR.zip")) { Write-Error "OCR zip missing"; exit 1 }

      - name: Build app (renderer + package)
        shell: pwsh
        run: npm run dist

      - name: Version update metadata
        shell: pwsh
        run: |
          $pkg = Get-Content package.json | ConvertFrom-Json
          $version = $pkg.version
          Copy-Item "release/latest.yml" "release/3s-PokeMMO-Tool-$version-win-x64.yml"
      - name: List release contents
        shell: pwsh
        run: |
          Write-Host "---- RELEASE TREE ----"
          Get-ChildItem -Path "release" -Recurse | Select-Object FullName,Length,LastWriteTime

      - name: Verify OCR payload packaged (zip or folder)
        shell: pwsh
        run: |
          $zip = Get-Item -Path "release\win-unpacked\resources\LiveRouteOCR.zip" -ErrorAction SilentlyContinue
          $exe = Get-Item -Path "release\win-unpacked\resources\LiveRouteOCR\LiveRouteOCR.exe" -ErrorAction SilentlyContinue
          if (-not $zip -and -not $exe) {
            Get-ChildItem -Path "release\win-unpacked\resources" -Recurse | Select FullName,Length | Out-String | Write-Host
            Write-Error "Neither LiveRouteOCR.zip nor LiveRouteOCR\LiveRouteOCR.exe found in resources"; exit 1
          }
          if ($zip) { Write-Host "Found packaged zip: $($zip.FullName)" }
          if ($exe) { Write-Host "Found packaged folder exe: $($exe.FullName)" }

      - name: Create/Update GitHub Release and upload
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            release/latest.yml
            release/3s-PokeMMO-Tool-*-win-x64.*
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Ensure app-builder is executable
        run: chmod +x node_modules/app-builder-bin/linux/x64/app-builder

      - name: Build app (renderer + package)
        run: npm run pack:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List release contents
        run: |
          echo "---- RELEASE TREE ----"
          find release -type f -print -exec ls -l {} \;

      - name: Create/Update GitHub Release and upload
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            release/latest-linux.yml
            release/3s-PokeMMO-Tool-*-linux-x64.*
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    runs-on: macos-13
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Ensure app-builder is executable
        run: chmod +x node_modules/app-builder-bin/mac/app-builder_arm64

      - name: Build app (renderer + package)
        run: npm run pack:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List release contents
        run: |
          echo "---- RELEASE TREE ----"
          find release -type f -print -exec ls -l {} \;

      - name: Create/Update GitHub Release and upload
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            release/latest-mac.yml
            release/3s-PokeMMO-Tool-*-mac-*.*
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}